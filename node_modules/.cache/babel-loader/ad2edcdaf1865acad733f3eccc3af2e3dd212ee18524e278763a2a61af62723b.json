{"ast":null,"code":"var _jsxFileName = \"/Users/anhlekd/Documents/manulife-phom/src/components/ScoreTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"antd\";\nimport { RoundRow } from \"./RoundRow\";\nimport { specialButtons } from \"../constants/button\";\nimport { RoundInput } from \"./RoundInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreTable = ({\n  players\n}) => {\n  _s();\n  const [playerNames, setPlayerNames] = useState(players);\n  const [scores, setScores] = useState(players.map(() => 0));\n  const [rounds, setRounds] = useState([]);\n  const handleAddRound = roundScores => {\n    const updatedScores = scores.map((score, idx) => score + roundScores[idx]);\n    setScores(updatedScores);\n    setRounds([...rounds, roundScores]);\n  };\n  const handleEditRound = (roundIndex, newScores) => {\n    const updatedRounds = rounds.map((round, idx) => idx === roundIndex ? newScores : round);\n    setRounds(updatedRounds);\n\n    // Recalculate total scores\n    const updatedScores = players.map((_, idx) => updatedRounds.reduce((total, round) => total + round[idx], 0));\n    setScores(updatedScores);\n  };\n  const handleDeleteRound = roundIndex => {\n    const updatedRounds = rounds.filter((_, idx) => idx !== roundIndex);\n\n    // Recalculate total scores after deletion\n    const updatedScores = players.map((_, idx) => updatedRounds.reduce((total, round) => total + round[idx], 0));\n    setRounds(updatedRounds);\n    setScores(updatedScores);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"B\\u1EA3ng t\\xEDnh \\u0111i\\u1EC3m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), playerNames.map((name, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 45\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [rounds.map((round, idx) => /*#__PURE__*/_jsxDEV(RoundRow, {\n          index: idx,\n          round: round,\n          players: players,\n          onEdit: handleEditRound,\n          onDelete: handleDeleteRound\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"total-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"T\\u1ED5ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), scores.map((score, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: score\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: scores.reduce((total, score) => total + score, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoundInput, {\n      players: players,\n      onSubmit: handleAddRound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreTable, \"5995/ViB8mnLIZwN12HSzySAAS4=\");\n_c = ScoreTable;\nexport default ScoreTable;\nvar _c;\n$RefreshReg$(_c, \"ScoreTable\");","map":{"version":3,"names":["React","useState","Button","RoundRow","specialButtons","RoundInput","jsxDEV","_jsxDEV","ScoreTable","players","_s","playerNames","setPlayerNames","scores","setScores","map","rounds","setRounds","handleAddRound","roundScores","updatedScores","score","idx","handleEditRound","roundIndex","newScores","updatedRounds","round","_","reduce","total","handleDeleteRound","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","index","onEdit","onDelete","onSubmit","_c","$RefreshReg$"],"sources":["/Users/anhlekd/Documents/manulife-phom/src/components/ScoreTable.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"antd\";\nimport { RoundRow } from \"./RoundRow\";\nimport { specialButtons } from \"../constants/button\";\nimport { RoundInput } from \"./RoundInput\";\n\n\nconst ScoreTable = ({ players }) => {\n  const [playerNames, setPlayerNames] = useState(players);\n  const [scores, setScores] = useState(players.map(() => 0));\n  const [rounds, setRounds] = useState([]);\n\n\n  const handleAddRound = (roundScores) => {\n    const updatedScores = scores.map((score, idx) => score + roundScores[idx]);\n    setScores(updatedScores);\n    setRounds([...rounds, roundScores]);\n  };\n\n  const handleEditRound = (roundIndex, newScores) => {\n    const updatedRounds = rounds.map((round, idx) =>\n      idx === roundIndex ? newScores : round\n    );\n\n    setRounds(updatedRounds);\n\n    // Recalculate total scores\n    const updatedScores = players.map((_, idx) =>\n      updatedRounds.reduce((total, round) => total + round[idx], 0)\n    );\n    setScores(updatedScores);\n  };\n\n  const handleDeleteRound = (roundIndex) => {\n    const updatedRounds = rounds.filter((_, idx) => idx !== roundIndex);\n\n    // Recalculate total scores after deletion\n    const updatedScores = players.map((_, idx) =>\n      updatedRounds.reduce((total, round) => total + round[idx], 0)\n    );\n\n    setRounds(updatedRounds);\n    setScores(updatedScores);\n  };\n\n  return (\n    <div className=\"score-table\">\n      <h2>Bảng tính điểm</h2>\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            {playerNames.map((name, idx) => <th key={idx}>{name}</th>)}\n            <th>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {rounds.map((round, idx) => (\n            <RoundRow\n              key={idx}\n              index={idx}\n              round={round}\n              players={players}\n              onEdit={handleEditRound}\n              onDelete={handleDeleteRound}\n            />\n          ))}\n          <tr className=\"total-row\">\n            <td>Tổng</td>\n            {scores.map((score, idx) => (\n              <td key={idx}>{score}</td>\n            ))}\n            <td>{scores.reduce((total, score) => total + score, 0)}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <RoundInput players={players} onSubmit={handleAddRound} />\n    </div>\n  );\n};\n\n\nexport default ScoreTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,MAAM;AAC7B,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACQ,OAAO,CAAC;EACvD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACQ,OAAO,CAACM,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAGxC,MAAMiB,cAAc,GAAIC,WAAW,IAAK;IACtC,MAAMC,aAAa,GAAGP,MAAM,CAACE,GAAG,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAKD,KAAK,GAAGF,WAAW,CAACG,GAAG,CAAC,CAAC;IAC1ER,SAAS,CAACM,aAAa,CAAC;IACxBH,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEG,WAAW,CAAC,CAAC;EACrC,CAAC;EAED,MAAMI,eAAe,GAAGA,CAACC,UAAU,EAAEC,SAAS,KAAK;IACjD,MAAMC,aAAa,GAAGV,MAAM,CAACD,GAAG,CAAC,CAACY,KAAK,EAAEL,GAAG,KAC1CA,GAAG,KAAKE,UAAU,GAAGC,SAAS,GAAGE,KACnC,CAAC;IAEDV,SAAS,CAACS,aAAa,CAAC;;IAExB;IACA,MAAMN,aAAa,GAAGX,OAAO,CAACM,GAAG,CAAC,CAACa,CAAC,EAAEN,GAAG,KACvCI,aAAa,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEH,KAAK,KAAKG,KAAK,GAAGH,KAAK,CAACL,GAAG,CAAC,EAAE,CAAC,CAC9D,CAAC;IACDR,SAAS,CAACM,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMW,iBAAiB,GAAIP,UAAU,IAAK;IACxC,MAAME,aAAa,GAAGV,MAAM,CAACgB,MAAM,CAAC,CAACJ,CAAC,EAAEN,GAAG,KAAKA,GAAG,KAAKE,UAAU,CAAC;;IAEnE;IACA,MAAMJ,aAAa,GAAGX,OAAO,CAACM,GAAG,CAAC,CAACa,CAAC,EAAEN,GAAG,KACvCI,aAAa,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEH,KAAK,KAAKG,KAAK,GAAGH,KAAK,CAACL,GAAG,CAAC,EAAE,CAAC,CAC9D,CAAC;IAEDL,SAAS,CAACS,aAAa,CAAC;IACxBZ,SAAS,CAACM,aAAa,CAAC;EAC1B,CAAC;EAED,oBACEb,OAAA;IAAK0B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,eACE3B,OAAA;UAAA2B,QAAA,gBACE3B,OAAA;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACR3B,WAAW,CAACI,GAAG,CAAC,CAACwB,IAAI,EAAEjB,GAAG,kBAAKf,OAAA;YAAA2B,QAAA,EAAeK;UAAI,GAAVjB,GAAG;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,CAAC,eAC1D/B,OAAA;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR/B,OAAA;QAAA2B,QAAA,GACGlB,MAAM,CAACD,GAAG,CAAC,CAACY,KAAK,EAAEL,GAAG,kBACrBf,OAAA,CAACJ,QAAQ;UAEPqC,KAAK,EAAElB,GAAI;UACXK,KAAK,EAAEA,KAAM;UACblB,OAAO,EAAEA,OAAQ;UACjBgC,MAAM,EAAElB,eAAgB;UACxBmB,QAAQ,EAAEX;QAAkB,GALvBT,GAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMT,CACF,CAAC,eACF/B,OAAA;UAAI0B,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACvB3B,OAAA;YAAA2B,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACZzB,MAAM,CAACE,GAAG,CAAC,CAACM,KAAK,EAAEC,GAAG,kBACrBf,OAAA;YAAA2B,QAAA,EAAeb;UAAK,GAAXC,GAAG;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAC1B,CAAC,eACF/B,OAAA;YAAA2B,QAAA,EAAKrB,MAAM,CAACgB,MAAM,CAAC,CAACC,KAAK,EAAET,KAAK,KAAKS,KAAK,GAAGT,KAAK,EAAE,CAAC;UAAC;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAER/B,OAAA,CAACF,UAAU;MAACI,OAAO,EAAEA,OAAQ;MAACkC,QAAQ,EAAEzB;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA1EIF,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AA6EhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}